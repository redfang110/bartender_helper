{"ast":null,"code":"var _jsxFileName = \"/Users/eshagadgil/Desktop/bartender_helper/src/frontend/src/Spirits.js\",\n  _s = $RefreshSig$();\n// src/Spirits.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Spirits() {\n  _s();\n  const [spirits, setSpirits] = useState([]); // State to store the spirits data\n\n  useEffect(() => {\n    async function fetchSpirits() {\n      try {\n        const response = await axios.get('http://localhost:4000/api/spirits'); // Modify the URL as necessary\n        setSpirits(response.data);\n      } catch (error) {\n        console.error('Failed to fetch spirits:', error);\n      }\n    }\n    fetchSpirits();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spirits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), spirits.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: spirits.map(spirit => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: spirit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this), \" (\", spirit.type, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this), \"Flavor Profile: \", spirit.flavor_profile]\n      }, spirit._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No spirits found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(Spirits, \"9Vakx53erFX42BMdHVdANIefyo4=\");\n_c = Spirits;\nexport default Spirits;\nvar _c;\n$RefreshReg$(_c, \"Spirits\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Spirits","_s","spirits","setSpirits","fetchSpirits","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","spirit","name","type","flavor_profile","_id","_c","$RefreshReg$"],"sources":["/Users/eshagadgil/Desktop/bartender_helper/src/frontend/src/Spirits.js"],"sourcesContent":["// src/Spirits.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Spirits() {\n    const [spirits, setSpirits] = useState([]);  // State to store the spirits data\n\n    useEffect(() => {\n        async function fetchSpirits() {\n            try {\n                const response = await axios.get('http://localhost:4000/api/spirits');  // Modify the URL as necessary\n                setSpirits(response.data);\n            } catch (error) {\n                console.error('Failed to fetch spirits:', error);\n            }\n        }\n        fetchSpirits();\n    }, []);\n\n    return (\n        <div>\n            <h2>Spirits</h2>\n            {spirits.length > 0 ? (\n                <ul>\n                    {spirits.map(spirit => (\n                        <li key={spirit._id}>\n                            <strong>{spirit.name}</strong> ({spirit.type})\n                            <br />\n                            Flavor Profile: {spirit.flavor_profile}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No spirits found.</p>\n            )}\n        </div>\n    );\n}\n\nexport default Spirits;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;;EAE7CC,SAAS,CAAC,MAAM;IACZ,eAAeQ,YAAYA,CAAA,EAAG;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAE;QACxEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ;IACAJ,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACfZ,OAAO,CAACa,MAAM,GAAG,CAAC,gBACfhB,OAAA;MAAAW,QAAA,EACKR,OAAO,CAACc,GAAG,CAACC,MAAM,iBACflB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAAW,QAAA,EAASO,MAAM,CAACC;QAAI;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACG,MAAM,CAACE,IAAI,EAAC,GAC7C,eAAApB,OAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,oBACU,EAACG,MAAM,CAACG,cAAc;MAAA,GAHjCH,MAAM,CAACI,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIf,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,gBAELf,OAAA;MAAAW,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACb,EAAA,CAjCQD,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}