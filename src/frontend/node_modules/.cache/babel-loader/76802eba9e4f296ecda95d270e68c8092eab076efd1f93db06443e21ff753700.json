{"ast":null,"code":"var _jsxFileName = \"/Users/eshagadgil/Desktop/bartender_helper/src/frontend/src/SubmitRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubmitRecipe() {\n  _s();\n  const [recipeName, setRecipeName] = useState('');\n  const [createdBy, setCreatedBy] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [steps, setSteps] = useState('');\n  const [serving, setServing] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Format the ingredients from string to array as expected by the backend\n      const ingredientsArray = ingredients.split(',').map(ingredient => ingredient.trim());\n      const stepsArray = steps.split('\\n').filter(step => step.trim() !== '');\n      const newRecipe = {\n        name: recipeName,\n        createdBy,\n        ingredients: ingredientsArray,\n        steps: stepsArray,\n        serving,\n        imageUrl\n      };\n\n      // POST request to the backend using axios\n      const response = await axios.post('http://localhost:4000/api/recipes', newRecipe);\n      console.log('Recipe submitted successfully:', response.data);\n      alert('Recipe submitted successfully!');\n\n      // Clear the form fields after successful submission\n      setRecipeName('');\n      setCreatedBy('');\n      setIngredients('');\n      setSteps('');\n      setServing('');\n      setImageUrl('');\n    } catch (error) {\n      console.error('Error submitting recipe:', error);\n      alert('Failed to submit recipe. Please check the console for more details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit a New Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: recipeName,\n      onChange: e => setRecipeName(e.target.value),\n      placeholder: \"Recipe Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: createdBy,\n      onChange: e => setCreatedBy(e.target.value),\n      placeholder: \"Created By\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: ingredients,\n      onChange: e => setIngredients(e.target.value),\n      placeholder: \"Ingredients (comma-separated)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: steps,\n      onChange: e => setSteps(e.target.value),\n      placeholder: \"Steps (one per line)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: serving,\n      onChange: e => setServing(e.target.value),\n      placeholder: \"Serving\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: imageUrl,\n      onChange: e => setImageUrl(e.target.value),\n      placeholder: \"Image URL\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(SubmitRecipe, \"Ec0+aWNDoiFT3YneSjxYKRMPty0=\");\n_c = SubmitRecipe;\nexport default SubmitRecipe;\nvar _c;\n$RefreshReg$(_c, \"SubmitRecipe\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SubmitRecipe","_s","recipeName","setRecipeName","createdBy","setCreatedBy","ingredients","setIngredients","steps","setSteps","serving","setServing","imageUrl","setImageUrl","handleSubmit","event","preventDefault","ingredientsArray","split","map","ingredient","trim","stepsArray","filter","step","newRecipe","name","response","post","console","log","data","alert","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/eshagadgil/Desktop/bartender_helper/src/frontend/src/SubmitRecipe.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction SubmitRecipe() {\n    const [recipeName, setRecipeName] = useState('');\n    const [createdBy, setCreatedBy] = useState('');\n    const [ingredients, setIngredients] = useState('');\n    const [steps, setSteps] = useState('');\n    const [serving, setServing] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            // Format the ingredients from string to array as expected by the backend\n            const ingredientsArray = ingredients.split(',').map(ingredient => ingredient.trim());\n            const stepsArray = steps.split('\\n').filter(step => step.trim() !== '');\n\n            const newRecipe = {\n                name: recipeName,\n                createdBy,\n                ingredients: ingredientsArray,\n                steps: stepsArray,\n                serving,\n                imageUrl\n            };\n\n            // POST request to the backend using axios\n            const response = await axios.post('http://localhost:4000/api/recipes', newRecipe);\n            console.log('Recipe submitted successfully:', response.data);\n            alert('Recipe submitted successfully!');\n\n            // Clear the form fields after successful submission\n            setRecipeName('');\n            setCreatedBy('');\n            setIngredients('');\n            setSteps('');\n            setServing('');\n            setImageUrl('');\n        } catch (error) {\n            console.error('Error submitting recipe:', error);\n            alert('Failed to submit recipe. Please check the console for more details.');\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>Submit a New Recipe</h2>\n            <input\n                type=\"text\"\n                value={recipeName}\n                onChange={(e) => setRecipeName(e.target.value)}\n                placeholder=\"Recipe Name\"\n                required\n            />\n            <input\n                type=\"text\"\n                value={createdBy}\n                onChange={(e) => setCreatedBy(e.target.value)}\n                placeholder=\"Created By\"\n                required\n            />\n            <textarea\n                value={ingredients}\n                onChange={(e) => setIngredients(e.target.value)}\n                placeholder=\"Ingredients (comma-separated)\"\n                required\n            />\n            <textarea\n                value={steps}\n                onChange={(e) => setSteps(e.target.value)}\n                placeholder=\"Steps (one per line)\"\n                required\n            />\n            <input\n                type=\"text\"\n                value={serving}\n                onChange={(e) => setServing(e.target.value)}\n                placeholder=\"Serving\"\n                required\n            />\n            <input\n                type=\"text\"\n                value={imageUrl}\n                onChange={(e) => setImageUrl(e.target.value)}\n                placeholder=\"Image URL\"\n                required\n            />\n            <button type=\"submit\">Submit Recipe</button>\n        </form>\n    );\n}\n\nexport default SubmitRecipe;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMkB,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACA;MACA,MAAMC,gBAAgB,GAAGX,WAAW,CAACY,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC;MACpF,MAAMC,UAAU,GAAGd,KAAK,CAACU,KAAK,CAAC,IAAI,CAAC,CAACK,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACH,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;MAEvE,MAAMI,SAAS,GAAG;QACdC,IAAI,EAAExB,UAAU;QAChBE,SAAS;QACTE,WAAW,EAAEW,gBAAgB;QAC7BT,KAAK,EAAEc,UAAU;QACjBZ,OAAO;QACPE;MACJ,CAAC;;MAED;MACA,MAAMe,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,mCAAmC,EAAEH,SAAS,CAAC;MACjFI,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC5DC,KAAK,CAAC,gCAAgC,CAAC;;MAEvC;MACA7B,aAAa,CAAC,EAAE,CAAC;MACjBE,YAAY,CAAC,EAAE,CAAC;MAChBE,cAAc,CAAC,EAAE,CAAC;MAClBE,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdE,WAAW,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDD,KAAK,CAAC,qEAAqE,CAAC;IAChF;EACJ,CAAC;EAED,oBACIjC,OAAA;IAAMmC,QAAQ,EAAEpB,YAAa;IAAAqB,QAAA,gBACzBpC,OAAA;MAAAoC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BxC,OAAA;MACIyC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEvC,UAAW;MAClBwC,QAAQ,EAAGC,CAAC,IAAKxC,aAAa,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,WAAW,EAAC,aAAa;MACzBC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MACIyC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAErC,SAAU;MACjBsC,QAAQ,EAAGC,CAAC,IAAKtC,YAAY,CAACsC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC9CI,WAAW,EAAC,YAAY;MACxBC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MACI0C,KAAK,EAAEnC,WAAY;MACnBoC,QAAQ,EAAGC,CAAC,IAAKpC,cAAc,CAACoC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC,+BAA+B;MAC3CC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MACI0C,KAAK,EAAEjC,KAAM;MACbkC,QAAQ,EAAGC,CAAC,IAAKlC,QAAQ,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,sBAAsB;MAClCC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MACIyC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE/B,OAAQ;MACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC,SAAS;MACrBC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MACIyC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAGC,CAAC,IAAK9B,WAAW,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,WAAW;MACvBC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACFxC,OAAA;MAAQyC,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEf;AAACtC,EAAA,CAzFQD,YAAY;AAAA+C,EAAA,GAAZ/C,YAAY;AA2FrB,eAAeA,YAAY;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}